package com.fastbiding.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import com.fastbiding.exception.TenderAdminException;
import com.fastbiding.model.Application;
import com.fastbiding.model.Project;
import com.fastbiding.model.Tender;
import com.fastbiding.model.TenderAdmin;
import com.fastbiding.utility.DBUtil;

public class TenderAdminDaoImpl implements TenderAdminDao{

	@Override
	public String register(TenderAdmin admin) throws TenderAdminException {
		// TODO Auto-generated method stub
		String message  = "Not registerd ...";
		
		try (Connection con =DBUtil.provideConnection()){
				 PreparedStatement ps = con.prepareStatement("insert into proposalAdmin(client, email, location, password, country, state, companyRegistrationNo) values(?,?,?,?,?,?,?) ");
				 ps.setString(1, admin.getClient()); 
				 ps.setString(2, admin.getEmail());
				 ps.setString(3, admin.getLocation());
				 ps.setString(4, admin.getPassword());
				 ps.setString(5, admin.getCountry());
				 ps.setString(6, admin.getState());
				 ps.setString(7, admin.getCompanyRegistrationNo());
			    int x =	 ps.executeUpdate();
			    
			    if(x>0)
			    	message = "Congratulation! Your company is registered Seccussfully";
		} catch (SQLException e) {
			// TODO: handle exception
			e.printStackTrace();
			throw new TenderAdminException(e.getMessage());
		}
		
		return message;
	}

	@Override
	public TenderAdmin login(String username, String password) throws TenderAdminException {
		// TODO Auto-generated method stub
		TenderAdmin pAdmin = null;
		
		try (Connection con = DBUtil.provideConnection()){
			        con.prepareStatement("select * from proposalAdmin ");
		} catch (Exception e) {
			// TODO: handle exception
		}
		
		return pAdmin;
	}

	@Override
	public String addProject(Project pr) throws TenderAdminException {
		// TODO Auto-generated method stub
		String message = "project not added ..";
		
		try (Connection con = DBUtil.provideConnection()){
			  PreparedStatement ps =   con.prepareStatement("insert into projects(pTitle, pSummary, pDetailsDocLink, type, pAdmin)"
			     		+ "values(?,?,?,?,?)");
			    ps.setString(1, pr.getpTitle());
			    ps.setString(2, pr.getpSummary());
			    ps.setString(3, pr.getpDetailesDocLink());
			    ps.setString(1, pr.getType());
			    ps.setInt(1, pr.getpAdmin());
			    
			  int x =   ps.executeUpdate();
			  if(x >0) {
				  message = "Congratulation! Your Project is listed";
			  }
			     
		} catch (SQLException e) {
			// TODO: handle exception
			e.printStackTrace();
			throw new TenderAdminException(e.getMessage());
		}
		
		return message;
	}

	@Override
	public List<Project> getAllProject(int tAdminId) throws TenderAdminException {
		// TODO Auto-generated method stub
		List<Project> list = new ArrayList<>();
		
		try (Connection con = DBUtil.provideConnection()){
			  PreparedStatement ps =    con.prepareStatement("select * from projects where pAdmin = ?");
			  ps.setInt(1, tAdminId);
			ResultSet rs =  ps.executeQuery();
			while(rs.next()) {
				list.add(new Project(rs.getInt("pjId"), rs.getString("pTitle"), rs.getString("pSummary"), rs.getString("pDetailsDocLink"), rs.getString("type"), rs.getInt("pAdmin")));
			}
		} catch (SQLException e) {
			// TODO: handle exception
			e.printStackTrace();
			throw new TenderAdminException(e.getMessage());
		}
		
		return list;
	}

	@Override
	public String createTenderofAproject(Tender tender) throws TenderAdminException {
		// TODO Auto-generated method stub
		String message = "Tender for project id:"+tender.getPjId()+" is not created";
		
		try (Connection con = DBUtil.provideConnection()){
			PreparedStatement ps =   con.prepareStatement("insert into tenders(pjId, prerequisite, startDate, endDate) values(?,?,?,?)");
			ps.setInt(1, tender.getPjId());
			ps.setString(2, tender.getPrerequisite());
			ps.setString(3, tender.getStartDate());
			ps.setString(4, tender.getEndDate());
			
		  int x = ps.executeUpdate();
		  if(x>0) {
			  message = "Congratulations! Tender for your project id"+tender.getPjId()+"is created";
		  }
			
		} catch (SQLException e) {
			// TODO: handle exception
			e.printStackTrace();
			throw new TenderAdminException(e.getMessage());
		}
		
		
		return message;
	}

	@Override
	public String deleteTender(int tenderId) throws TenderAdminException {
		// TODO Auto-generated method stub
		String message = "Tender is not removed";
		
		try (Connection con = DBUtil.provideConnection()){
			   PreparedStatement ps =    con.prepareStatement("delete from Tenders where tId =?");
			   ps.setInt(1, tenderId);
			  int x =   ps.executeUpdate();
			   if(x >0) {
				   message = "Tendor is removed";
			   }
			   
			   
		} catch (SQLException e) {
			// TODO: handle exception
			e.printStackTrace();
			throw new TenderAdminException();
		}
		
		return message;
	}

	@Override
	public List<Application> getAllAppOfTender(int tAdminId) throws TenderAdminException {
		// TODO Auto-generated method stub
		List<Application> list = new ArrayList<>();
		
		
		try (Connection con = DBUtil.provideConnection()){
			   PreparedStatement ps =   con.prepareStatement("select*from tenders where pjid= (select pjid from projects where pAdmin = ?)");
			   ps.setInt(1, tAdminId);
			  ResultSet rs =  ps.executeQuery();
			  while(rs.next()) {
				  list.add(new Application(rs.getInt("apId"), rs.getInt("vid"), rs.getInt("tid"), rs.getString("detailsDoc"), rs.getString("aStatus")));
			  }
		} catch (SQLException e) {
			// TODO: handle exception
			e.printStackTrace();
			throw new TenderAdminException();
		}
		
		return list;
	}

	@Override
	public String selectAppforTender(int appId) throws TenderAdminException {
		// TODO Auto-generated method stub
		String message = "Vender is not selected for tender";
		
		try (Connection con = DBUtil.provideConnection()){
			  PreparedStatement ps = con.prepareStatement("");
		} catch (SQLException e) {
			// TODO: handle exception
			e.printStackTrace();
			throw new TenderAdminException(e.getMessage());
		}
		
		
		return message;
	}

	@Override
	public String givefeeback(int vendorId, int projectId) throws TenderAdminException {
		// TODO Auto-generated method stub
		return null;
	}

}
